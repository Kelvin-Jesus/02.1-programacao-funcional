#lang racket

(require examples)

(struct registro (tipo quantidade) #:transparent)
;; Representa um registro da tabela
;; tipo: String -> Tipo do registro
;; quantidade: NÃºmero Inteiro Positivo -> ocorrÃªncias do tipo dentro da tabela

;; lista-de-registro: lista
;;
;; Devolve uma lista de registro com cada registro representando uma linha da tabela

;; (examples
;; (check-equal? (gera-tabela (list "banana 40" "uva 60")) (list (registro "banana" 40) (registro "uva" 60))))
(define (gera-tabela lista-de-registros)
  (list ))

(examples
 (check-equal? (string->registro "Uva 60") (list "Uva" 60)))
(define (string->registro string)
  (registro (string-split string " "))


(define (gera-grafico tabela) (list ""))

(define (main)
  (define entrada (port->lines))
  (define tabela (gera-tabela entrada))
  (define saida (gera-grafico tabela))
  (display-lines saida))

(main)